openapi: 3.0.0
info:
  title: Products API
  version: 4.0.0
  description: External OpenAPI specification for product management
paths:
  /api/products/{id}:
    get:
      summary: Get product by ID
      description: Retrieve detailed product information by unique identifier
      tags:
        - Products
        - v4.0.0
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Product's unique identifier
        - name: include_reviews
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Include product reviews in response
      responses:
        '200':
          description: Product found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update product
      description: Update product information
      tags:
        - Products
        - v4.0.0
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
        - category
      properties:
        id:
          type: string
          format: uuid
          description: Product's unique identifier
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          format: decimal
          minimum: 0
          description: Product price
        category:
          type: string
          description: Product category
        tags:
          type: array
          items:
            type: string
          description: Product tags
        in_stock:
          type: boolean
          default: true
          description: Whether product is in stock
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          description: Product reviews (optional)

    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        price:
          type: number
          format: decimal
          minimum: 0
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        in_stock:
          type: boolean

    Review:
      type: object
      required:
        - id
        - rating
        - comment
        - user_id
      properties:
        id:
          type: string
          format: uuid
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
          maxLength: 500
        user_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details