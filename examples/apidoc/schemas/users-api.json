{
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["id", "email", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "User's unique identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "moderator"],
            "default": "user",
            "description": "User's role in the system"
          },
          "profile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": ["email", "name", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "description": "User's full name"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 128,
            "description": "User's password"
          },
          "role": {
            "type": "string",
            "enum": ["user", "moderator"],
            "default": "user",
            "description": "User's initial role"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "bio": {
            "type": "string",
            "description": "User's biography"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "URL to user's avatar image"
          },
          "preferences": {
            "type": "object",
            "properties": {
              "theme": {
                "type": "string",
                "enum": ["light", "dark", "auto"],
                "default": "auto"
              },
              "language": {
                "type": "string",
                "default": "en"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        }
      }
    }
  },
  "info": {
    "title": "Users API",
    "version": "4.0.0",
    "description": "External OpenAPI specification for user management"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve detailed information about a specific user by their unique identifier",
        "tags": ["Users"],
        "x-version": "4.0.0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "User's unique identifier"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["profile", "settings", "preferences"]
            },
            "description": "Additional data to include in response"
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Create new user",
        "description": "Create a new user account with the provided information",
        "tags": ["Users"],
        "x-version": "2.1.0",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
